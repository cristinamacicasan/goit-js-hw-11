{"mappings":"iiBACA,IAmHQA,EACAC,EApHRC,EAAAC,EAAA,S,oDAMMC,EAAU,qC,SAGEC,EAAUC,G,OAAbC,EAAYC,MAAAC,KAAAC,U,UAAZH,I,OAAAA,EAAfI,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,EAA4BR,G,IAAOS,EAEzBC,EAAQC,EAAAP,U,yEAFiBK,EAAAE,EAAAC,OAAA,YAAAD,EAAA,GAAQA,EAAA,GAAD,E,kBAEfE,EAAAC,QAAMC,IAAI,2BAA4B,CAC3DC,OAAQ,CACNC,IAAKnB,EACLoB,EAAGlB,EACHmB,WAAY,QACZC,YAAa,aACbC,YAAY,EACZZ,KAAMA,EACNa,SAAU,M,cARRZ,EAAQa,EAAAC,K,kBAWPd,EAASe,M,OAEhB,M,yBAAM,IAAIC,MAAM,kC,yDAfLzB,EAAYC,MAAAC,KAAAC,U,CAoBtB,SAAIuB,EAAqBC,GAC5BvB,EAAAwB,GAASC,OAAOC,QAAQ,oBAA8BC,OAAVJ,EAAU,Y,CAIlD,SAAGK,IACP5B,EAAAwB,GAASC,OAAOI,KAAK,6D,CAInB,SAAKC,EAAcC,GACrB,IAAMC,EAAUC,SAASC,cAAc,YACvCF,EAAQG,UAAY,GAElBJ,EAAKK,SAAQ,SAAAC,GACb,IAAMC,EAAYL,SAASM,cAAc,OACzCD,EAAUE,UAAUC,IAAI,cACxBH,EAAUH,UAAY,oBAENR,OADHU,EAAMK,cAAc,gDACWf,OAA5BU,EAAMM,aAAa,WAGMhB,OAHGU,EAAMO,KAAK,wGAIdjB,OADAU,EAAMQ,MAAM,qDAETlB,OADHU,EAAMS,MAAM,wDAERnB,OADDU,EAAMU,SAAS,yDACEpB,OAAhBU,EAAMW,UAAU,4BAG7DhB,EAAQiB,YAAYX,E,IAIL,IAAItC,EAAAkD,GAAJ,CAAmB,aAAc,IACzCC,S,UAIIC,EAAaC,G,OAAbC,EAAYzD,MAAAC,KAAAC,U,UAAZuD,I,OAAAA,EAAftD,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,EAA4BkD,G,IAEpBE,EAQEC,E,qEATRH,EAAMI,iBAEc,MADdF,EAAcF,EAAMK,OAAOH,YAAYI,MAAMC,QAC7B,C,sBACpB5D,EAAAwB,GAASC,OAAOoC,QAAQ,gC,0CAKxB7D,EAAAwB,GAASsC,QAAQC,SAAS,2B,SACDrE,EAAa6D,G,OACP,KADzBC,EAAUtC,EAAAC,MACD6C,KAAKzD,OAClBqB,KAEAE,EAAc0B,EAAWQ,MACzB1C,EAAqBkC,EAAWjC,Y,kDAGlCvB,EAAAwB,GAASC,OAAOoC,QAAQ3C,EAAA+C,GAAMC,S,yBAE9BlE,EAAAwB,GAASsC,QAAQK,S,8EApBMtE,MAAAC,KAAAC,U,UAyBZqE,EAAef,G,OAAfgB,EAAcxE,MAAAC,KAAAC,U,UAAdsE,I,OAAAA,EAAfrE,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,EAA8BkD,G,IAEtBE,EACAe,EACAC,EAIEf,E,yEAPRH,EAAMI,iBACAF,EAActB,SAASuC,eAAe,eAAeb,MAAMC,OAC3DU,EAAcG,SAASpB,EAAMK,OAAOgB,QAAQtE,MAC5CmE,EAAWD,EAAc,E,SAG7BtE,EAAAwB,GAASsC,QAAQC,SAAS,0B,SACDrE,EAAa6D,EAAagB,G,OACpB,KADzBf,EAAUtC,EAAAC,MACD6C,KAAKzD,OAClBqB,KAEAE,EAAc0B,EAAWQ,MACzBX,EAAMK,OAAOgB,QAAQtE,KAAOmE,G,kDAG9BvE,EAAAwB,GAASC,OAAOoC,QAAQ3C,EAAA+C,GAAMC,S,yBAE9BlE,EAAAwB,GAASsC,QAAQK,S,8EAlBQtE,MAAAC,KAAAC,U,CAwBrBV,EAAa4C,SAASuC,eAAe,eACrClF,EAAc2C,SAASC,cAAc,cAE3C7C,EAAWsF,iBAAiB,SAAUvB,GACtC9D,EAAYqF,iBAAiB,QAASP,GACtC9E,EAAYsF,MAAMC,QAAU,M","sources":["src/app.js"],"sourcesContent":["// Importuri\nimport axios from \"axios\";\nimport Notiflix from \"notiflix\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n// Setarea cheii de acces la API\nconst API_KEY = \"42285080-c22d5f6a90f49c0ab863c2d8a\"; // Înlocuiți cu cheia dvs. unică de acces\n\n// Funcție pentru căutarea imaginilor pe baza unui cuvânt cheie\nasync function searchImages(query, page = 1) {\n  try {\n    const response = await axios.get(\"https://pixabay.com/api/\", {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n        page: page,\n        per_page: 40, // 40 de imagini pe pagină\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(\"Eroare la căutarea imaginilor.\");\n  }\n}\n\n// Funcție pentru afișarea notificării cu numărul total de imagini găsite\nfunction showTotalImagesFound(totalHits) {\n  Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n}\n\n// Funcție pentru afișarea notificării la sfârșitul rezultatelor de căutare\nfunction showEndOfSearchResults() {\n  Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n}\n\n// Funcție pentru gestionarea afișării cardurilor de imagini în galerie\nfunction displayImages(images) {\n  const gallery = document.querySelector(\".gallery\");\n  gallery.innerHTML = \"\"; // Șterge conținutul galeriei anterioare\n\n  images.forEach(image => {\n    const photoCard = document.createElement(\"div\");\n    photoCard.classList.add(\"photo-card\");\n    photoCard.innerHTML = `\n      <a href=\"${image.largeImageURL}\" data-lightbox=\"image\">\n        <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\">\n      </a>\n      <div class=\"info\">\n        <p class=\"info-item\"><b>Likes:</b> ${image.likes}</p>\n        <p class=\"info-item\"><b>Views:</b> ${image.views}</p>\n        <p class=\"info-item\"><b>Comments:</b> ${image.comments}</p>\n        <p class=\"info-item\"><b>Downloads:</b> ${image.downloads}</p>\n      </div>\n    `;\n    gallery.appendChild(photoCard);\n  });\n\n  // Actualizarea galeriei cu ajutorul SimpleLightbox\n  const lightbox = new SimpleLightbox(\".gallery a\", {});\n  lightbox.refresh();\n}\n\n// Funcție pentru gestionarea căutării și afișării imaginilor\nasync function handleSearch(event) {\n  event.preventDefault();\n  const searchQuery = event.target.searchQuery.value.trim();\n  if (searchQuery === \"\") {\n    Notiflix.Notify.failure(\"Please enter a search query.\");\n    return;\n  }\n\n  try {\n    Notiflix.Loading.standard(\"Searching for images...\");\n    const searchData = await searchImages(searchQuery);\n    if (searchData.hits.length === 0) {\n      showEndOfSearchResults();\n    } else {\n      displayImages(searchData.hits);\n      showTotalImagesFound(searchData.totalHits);\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  } finally {\n    Notiflix.Loading.remove();\n  }\n}\n\n// Funcție pentru gestionarea încărcării suplimentare a imaginilor\nasync function handleLoadMore(event) {\n  event.preventDefault();\n  const searchQuery = document.getElementById(\"searchQuery\").value.trim();\n  const currentPage = parseInt(event.target.dataset.page);\n  const nextPage = currentPage + 1;\n\n  try {\n    Notiflix.Loading.standard(\"Loading more images...\");\n    const searchData = await searchImages(searchQuery, nextPage);\n    if (searchData.hits.length === 0) {\n      showEndOfSearchResults();\n    } else {\n      displayImages(searchData.hits);\n      event.target.dataset.page = nextPage;\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  } finally {\n    Notiflix.Loading.remove();\n  }\n}\n\n// Inițializarea aplicației\nfunction initializeApp() {\n  const searchForm = document.getElementById(\"search-form\");\n  const loadMoreBtn = document.querySelector(\".load-more\");\n\n  searchForm.addEventListener(\"submit\", handleSearch);\n  loadMoreBtn.addEventListener(\"click\", handleLoadMore);\n  loadMoreBtn.style.display = \"none\"; // Inițial, butonul este ascuns\n}\n\ninitializeApp(); // Apelarea funcției pentru inițializarea aplicației\n"],"names":["searchForm","loadMoreBtn","$bpxeT","parcelRequire","$3015b282b063971c$var$API_KEY","$3015b282b063971c$var$searchImages","query","$3015b282b063971c$var$_searchImages","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","page","response","_args","length","$dIxxU","default","get","params","key","q","image_type","orientation","safesearch","per_page","_ctx","sent","data","Error","$3015b282b063971c$var$showTotalImagesFound","totalHits","$ejkSG","Notify","success","concat","$3015b282b063971c$var$showEndOfSearchResults","info","$3015b282b063971c$var$displayImages","images","gallery","document","querySelector","innerHTML","forEach","image","photoCard","createElement","classList","add","largeImageURL","webformatURL","tags","likes","views","comments","downloads","appendChild","$5IjG7","refresh","$3015b282b063971c$var$handleSearch","event","$3015b282b063971c$var$_handleSearch","searchQuery","searchData","preventDefault","target","value","trim","failure","Loading","standard","hits","t0","message","remove","$3015b282b063971c$var$handleLoadMore","$3015b282b063971c$var$_handleLoadMore","currentPage","nextPage","getElementById","parseInt","dataset","addEventListener","style","display"],"version":3,"file":"index.9ab9d352.js.map"}