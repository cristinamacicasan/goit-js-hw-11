{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,S,0BASGC,eAAYC,EAAaC,EAAOC,EAAO,GACxC,IAYE,aAXuBL,EAAAM,QAAMC,IAAI,2BAA4B,CAC3DC,OAAQ,CACNC,IAPQ,qCAQRC,EAAGN,EACHO,WAAY,QACZC,YAAa,aACbC,YAAY,EACZR,KAAMA,EACNS,SAAU,OAGEC,I,CAChB,MAAOC,GACP,MAAM,IAAIC,MAAM,iC,EAUd,SAAGC,IACPC,EAAAC,GAASC,OAAOC,KAAK,6D,CAInB,SAAKC,EAAcC,GACrB,MAAMC,EAAUC,SAASC,cAAc,YACvCF,EAAQG,UAAY,GAElBJ,EAAKK,SAAQC,IACb,MAAMC,EAAYL,SAASM,cAAc,OACzCD,EAAUE,UAAUC,IAAI,cACxBH,EAAUH,UAAY,oBACTE,EAAMK,4DACHL,EAAMM,sBAAsBN,EAAMO,2GAGTP,EAAMQ,yDACNR,EAAMS,4DACHT,EAAMU,gEACLV,EAAMW,oCAGnDhB,EAAQiB,YAAYX,EAAU,IAIf,IAAIZ,EAAAwB,GAAJ,CAAmB,aAAc,IACzCC,S,CAIL1C,eAAS2C,EAAaC,GAC1BA,EAAMC,iBACN,MAAMC,EAAcF,EAAMG,OAAOD,YAAYE,MAAMC,OAvChD,IAAyBC,EAwC5B,GAAoB,KAAhBJ,EAKJ,IACE7B,EAAAC,GAASiC,QAAQC,SAAS,2BAC1B,MAAMC,QAAmBpD,EAAa6C,GACP,IAA3BO,EAAWC,KAAKC,OAClBvC,KAEAK,EAAcgC,EAAWC,MAnDDJ,EAoDHG,EAAWH,UAnDpCjC,EAAAC,GAASC,OAAOqC,QAAQ,oBAAoBN,a,CAqD1C,MAAOpC,GACPG,EAAAC,GAASC,OAAOsC,QAAQ3C,EAAM4C,Q,CAC/B,QACCzC,EAAAC,GAASiC,QAAQQ,Q,MAhBjB1C,EAAAC,GAASC,OAAOsC,QAAQ,+B,CAqBxBzD,eAAW4D,EAAehB,GAC5BA,EAAMC,iBACN,MAAMC,EAActB,SAASqC,eAAe,eAAeb,MAAMC,OAE3Da,EADcC,SAASnB,EAAMG,OAAOiB,QAAQ7D,MACnB,EAE/B,IACEc,EAAAC,GAASiC,QAAQC,SAAS,0BAC1B,MAAMC,QAAmBpD,EAAa6C,EAAagB,GACpB,IAA3BT,EAAWC,KAAKC,OAClBvC,KAEAK,EAAcgC,EAAWC,MACzBV,EAAMG,OAAOiB,QAAQ7D,KAAO2D,E,CAE9B,MAAOhD,GACPG,EAAAC,GAASC,OAAOsC,QAAQ3C,EAAM4C,Q,CAC/B,QACCzC,EAAAC,GAASiC,QAAQQ,Q,GAKnB,WACA,MAAMM,EAAazC,SAASqC,eAAe,eACrCK,EAAc1C,SAASC,cAAc,cAE3CwC,EAAWE,iBAAiB,SAAUxB,GACtCuB,EAAYC,iBAAiB,QAASP,GACtCM,EAAYE,MAAMC,QAAU,M,CAG9BC","sources":["src/app.js"],"sourcesContent":["// Importuri\nimport axios from \"axios\";\nimport Notiflix from \"notiflix\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n// Setarea cheii de acces la API\nconst API_KEY = \"42285080-c22d5f6a90f49c0ab863c2d8a\"; // Înlocuiți cu cheia dvs. unică de acces\n\n// Funcție pentru căutarea imaginilor pe baza unui cuvânt cheie\nasync function searchImages(query, page = 1) {\n  try {\n    const response = await axios.get(\"https://pixabay.com/api/\", {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n        page: page,\n        per_page: 40, // 40 de imagini pe pagină\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(\"Eroare la căutarea imaginilor.\");\n  }\n}\n\n// Funcție pentru afișarea notificării cu numărul total de imagini găsite\nfunction showTotalImagesFound(totalHits) {\n  Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n}\n\n// Funcție pentru afișarea notificării la sfârșitul rezultatelor de căutare\nfunction showEndOfSearchResults() {\n  Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n}\n\n// Funcție pentru gestionarea afișării cardurilor de imagini în galerie\nfunction displayImages(images) {\n  const gallery = document.querySelector(\".gallery\");\n  gallery.innerHTML = \"\"; // Șterge conținutul galeriei anterioare\n\n  images.forEach(image => {\n    const photoCard = document.createElement(\"div\");\n    photoCard.classList.add(\"photo-card\");\n    photoCard.innerHTML = `\n      <a href=\"${image.largeImageURL}\" data-lightbox=\"image\">\n        <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\">\n      </a>\n      <div class=\"info\">\n        <p class=\"info-item\"><b>Likes:</b> ${image.likes}</p>\n        <p class=\"info-item\"><b>Views:</b> ${image.views}</p>\n        <p class=\"info-item\"><b>Comments:</b> ${image.comments}</p>\n        <p class=\"info-item\"><b>Downloads:</b> ${image.downloads}</p>\n      </div>\n    `;\n    gallery.appendChild(photoCard);\n  });\n\n  // Actualizarea galeriei cu ajutorul SimpleLightbox\n  const lightbox = new SimpleLightbox(\".gallery a\", {});\n  lightbox.refresh();\n}\n\n// Funcție pentru gestionarea căutării și afișării imaginilor\nasync function handleSearch(event) {\n  event.preventDefault();\n  const searchQuery = event.target.searchQuery.value.trim();\n  if (searchQuery === \"\") {\n    Notiflix.Notify.failure(\"Please enter a search query.\");\n    return;\n  }\n\n  try {\n    Notiflix.Loading.standard(\"Searching for images...\");\n    const searchData = await searchImages(searchQuery);\n    if (searchData.hits.length === 0) {\n      showEndOfSearchResults();\n    } else {\n      displayImages(searchData.hits);\n      showTotalImagesFound(searchData.totalHits);\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  } finally {\n    Notiflix.Loading.remove();\n  }\n}\n\n// Funcție pentru gestionarea încărcării suplimentare a imaginilor\nasync function handleLoadMore(event) {\n  event.preventDefault();\n  const searchQuery = document.getElementById(\"searchQuery\").value.trim();\n  const currentPage = parseInt(event.target.dataset.page);\n  const nextPage = currentPage + 1;\n\n  try {\n    Notiflix.Loading.standard(\"Loading more images...\");\n    const searchData = await searchImages(searchQuery, nextPage);\n    if (searchData.hits.length === 0) {\n      showEndOfSearchResults();\n    } else {\n      displayImages(searchData.hits);\n      event.target.dataset.page = nextPage;\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  } finally {\n    Notiflix.Loading.remove();\n  }\n}\n\n// Inițializarea aplicației\nfunction initializeApp() {\n  const searchForm = document.getElementById(\"search-form\");\n  const loadMoreBtn = document.querySelector(\".load-more\");\n\n  searchForm.addEventListener(\"submit\", handleSearch);\n  loadMoreBtn.addEventListener(\"click\", handleLoadMore);\n  loadMoreBtn.style.display = \"none\"; // Inițial, butonul este ascuns\n}\n\ninitializeApp(); // Apelarea funcției pentru inițializarea aplicației\n"],"names":["$2shzp","parcelRequire","async","$6f40c3a58f594b58$var$searchImages","query","page","default","get","params","key","q","image_type","orientation","safesearch","per_page","data","error","Error","$6f40c3a58f594b58$var$showEndOfSearchResults","$parcel$interopDefault","$1GAPJ","Notify","info","$6f40c3a58f594b58$var$displayImages","images","gallery","document","querySelector","innerHTML","forEach","image","photoCard","createElement","classList","add","largeImageURL","webformatURL","tags","likes","views","comments","downloads","appendChild","$fZKcF","refresh","$6f40c3a58f594b58$var$handleSearch","event","preventDefault","searchQuery","target","value","trim","totalHits","Loading","standard","searchData","hits","length","success","failure","message","remove","$6f40c3a58f594b58$var$handleLoadMore","getElementById","nextPage","parseInt","dataset","searchForm","loadMoreBtn","addEventListener","style","display","$6f40c3a58f594b58$var$initializeApp"],"version":3,"file":"index.83729bc7.js.map"}